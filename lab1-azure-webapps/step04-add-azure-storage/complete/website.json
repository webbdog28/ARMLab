{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "sitename": {
            "type": "string"
        },
        "hostingPlanName": {
            "type": "string"
        },
        "siteLocation": {
            "type": "string"
        },
        "sku": {
            "type": "string",
            "defaultValue": "s1",
            "metadata": {
                "description": "The hosting plan sku"
            }
        },
        "tier": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Free",
                "Shared",
                "Basic",
                "Standard",
                "Premium"
            ],
            "metadata": {
                "description": "the pricing tier"
            }
        },
        "newStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS Name for the Storage Account."
            }
        },
        "storageAccountType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS"
            ],
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "The type of storage account to provision"
            }
        }
    },
    "variables": {
        "slotName": "Staging",
        "storageApiVersion": "2015-05-01-preview" //providers('Microsoft.Storage', 'storageAccounts').apiVersions[0] <- this would be a dynamic way to get it, but currently there are some issue with it resolving a newer version than actually works.
    },
    "resources": [        
        {
            "apiVersion": "2015-08-01",
            "location": "[parameters('siteLocation')]",
            "name": "[parameters('hostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "properties": {
                "name": "[parameters('hostingPlanName')]",
                "numberOfWorkers": 1
            },
            "sku": {
                "name": "[parameters('sku')]",
                "tier": "[parameters('tier')]"
            }
        },
        {
            "apiVersion": "2015-08-01",
            "location": "[parameters('siteLocation')]",
            "name": "[parameters('sitename')]",
            "type": "Microsoft.Web/sites",
            "dependsOn": [
                "[concat('Microsoft.Web/serverFarms/', parameters('hostingPlanName'))]"
            ],
            "properties": {
                "name": "[parameters('sitename')]",
                "serverFarmId": "[parameters('hostingPlanName')]"
            },
            "resources": [
                {
                    "apiVersion": "2015-08-01",
                    "name": "[variables('slotName')]",
                    "type": "slots",
                    "location": "[parameters('siteLocation')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]"
                    ],
                    "properties": {},
                    "resources": [
                        {
                            "apiVersion": "2015-08-01",
                            "name": "appsettings",
                            "type": "config",
                            "dependsOn": [
                                "[resourceId('Microsoft.Web/Sites/slots', parameters('siteName'), variables('slotName'))]",
                                "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]"
                            ],
                            "properties": {
                                "testSetting": "[concat('Hello world from ', variables('slotName'))]",
                                //Add a connection string to the storage account, remember to make this resource dependent on the storage account
                                "AzureStorageAccount": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('newStorageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('newStorageAccountName')), variables('storageApiVersion')).key1,';')]"
                            }
                        }
                    ]
                },
                {
                    "apiVersion": "2015-08-01",
                    "name": "appsettings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]",
                        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]" //You can either create the dependency by using resourceId or name
                    ],
                    "properties": {
                        "testSetting": "Hello world from prod",
                        "AzureStorageAccount": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('newStorageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('newStorageAccountName')),  variables('storageApiVersion')).key1,';')]"
                    }
                }
            ]
        },
        {
             //Add Azure storage account  
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('siteLocation')]",
            "name": "[parameters('newStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "properties": {
                "accountType": "[parameters('storageAccountType')]"
            }            
        }
    ]
}